import { Button } from "@/components/ui/button";
import html2pdf from "html2pdf.js";
import { Download, Loader2 } from "lucide-react";
import { useState } from "react";

const DownloadButton = ({ content, videoUrl, language }) => {
  const [isGenerating, setIsGenerating] = useState(false);

  const getVideoTitle = (url) => {
    try {
      const urlObj = new URL(url);
      const videoId =
        urlObj.searchParams.get("v") || urlObj.pathname.split("/").pop();
      return `YouTube_Video_${videoId}`;
    } catch {
      return "YouTube_Video";
    }
  };

  const formatContentForPDF = (content) => {
    // Convert markdown-style content to HTML
    let htmlContent = content
      .replace(
        /# (.*)/g,
        '<h1 style="color: #7AFFA1; margin-bottom: 20px; margin-top: 30px;">$1</h1>'
      )
      .replace(
        /## (.*)/g,
        '<h2 style="color: #FFF87C; margin-bottom: 15px; margin-top: 25px;">$1</h2>'
      )
      .replace(
        /### (.*)/g,
        '<h3 style="color: #DDCBF5; margin-bottom: 10px; margin-top: 20px;">$1</h3>'
      )
      .replace(/• (.*)/g, '<li style="margin-bottom: 5px;">$1</li>')
      .replace(/\*\*(.*?)\*\*/g, "<strong>$1</strong>")
      .replace(
        /`(.*?)`/g,
        '<code style="background-color: rgba(122, 255, 161, 0.2); padding: 2px 4px; border-radius: 3px;">$1</code>'
      )
      .replace(/\n\n/g, '</p><p style="margin-bottom: 10px;">');

    return htmlContent;
  };

  const generatePDF = async () => {
    if (!content) return;

    setIsGenerating(true);

    try {
      const videoTitle = getVideoTitle(videoUrl);
      const formattedContent = formatContentForPDF(content);

      // Create HTML content for PDF
      const htmlContent = `
        <div style="font-family: 'Arial', sans-serif; color: #333; max-width: 800px; margin: 0 auto; padding: 40px 20px;">
          <div style="text-align: center; margin-bottom: 40px; border-bottom: 3px solid #7AFFA1; padding-bottom: 20px;">
            <h1 style="font-size: 2.5em; margin: 0; background: linear-gradient(135deg, #7AFFA1, #FFF87C, #DDCBF5); -webkit-background-clip: text; -webkit-text-fill-color: transparent; background-clip: text;">NoteQuik</h1>
            <p style="margin: 10px 0 0 0; color: #666; font-size: 1.1em;">Learning Note</p>
            <p style="margin: 5px 0 0 0; color: #888; font-size: 0.9em;">Language: ${language}</p>
          </div>
          
          <div style="line-height: 1.6; color: #333;">
            <p>${formattedContent}</p>
          </div>
          
          <div style="margin-top: 60px; padding-top: 20px; border-top: 2px solid #eee; text-align: center; color: #888; font-size: 0.85em;">
            <p>Generated by NoteQuik • ${new Date().toLocaleDateString()} • notequik.com</p>
          </div>
        </div>
      `;

      // Configure PDF options
      const options = {
        margin: 0.75,
        filename: `${videoTitle}_NoteQuik_${language}.pdf`,
        image: { type: "jpeg", quality: 0.98 },
        html2canvas: {
          scale: 2,
          useCORS: true,
          letterRendering: true,
        },
        jsPDF: {
          unit: "in",
          format: "letter",
          orientation: "portrait",
        },
      };

      // Generate and download PDF
      await html2pdf().set(options).from(htmlContent).save();
    } catch (error) {
      console.error("Error generating PDF:", error);
      alert("Failed to generate PDF. Please try again.");
    } finally {
      setIsGenerating(false);
    }
  };

  if (!content) return null;

  return (
    <div className="flex justify-center mt-6">
      <Button
        onClick={generatePDF}
        variant="gradient"
        size="lg"
        disabled={isGenerating}
        className="font-semibold"
      >
        {isGenerating ? (
          <>
            <Loader2 className="mr-2 h-5 w-5 animate-spin" />
            Generating PDF...
          </>
        ) : (
          <>
            <Download className="mr-2 h-5 w-5" />
            Download as PDF
          </>
        )}
      </Button>
    </div>
  );
};

export default DownloadButton;
